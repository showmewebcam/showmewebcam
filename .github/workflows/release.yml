name: Build/Release

on:
  # Triggers the workflow on push or pull request events on the master branch
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.50
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      BUILDROOT_VERSION: '2020.11'
      BUILDROOT_DIR: 'buildroot'
      # Stupid hack to invalidate cache from UI
      # https://github.com/actions/cache/issues/2#issuecomment-673493515
      CACHE_VERSION: ${{ secrets.CACHE_VERSION }}

    strategy:
      matrix:
        raspberry: ['raspberrypi0', 'raspberrypi0w']

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Retrieve annotated tags as the checkout above doesn't do this
      # https://github.com/actions/checkout/issues/217#issuecomment-636481619
      - name: Fetch Git Tag History
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "Current version: $(git describe)"

      - name: Download Buildroot
        run: |
          wget -qc https://buildroot.org/downloads/buildroot-${{ env.BUILDROOT_VERSION }}.tar.gz
          tar -zxf buildroot-${{ env.BUILDROOT_VERSION }}.tar.gz
          mv buildroot-${{ env.BUILDROOT_VERSION }} ${{ env.BUILDROOT_DIR }}

      - name: Cache Build
        uses: actions/cache@v2
        with:
          path: output
          key: ${{ matrix.raspberry }}-${{ env.BUILDROOT_DIR }}-${{ env.BUILDROOT_VERSION }}-${{ env.CACHE_VERSION }}

      - name: Build Image
        run: |
          # Force a piwebcam rebuild every time
          rm -fr output/*/build/piwebcam*
          sh build-showmewebcam.sh ${{ matrix.raspberry }}
          cp output/${{ matrix.raspberry }}/images/sdcard.img sdcard-${{ matrix.raspberry }}-${{ env.SHA }}.img

      - name: Upload Image
        uses: actions/upload-artifact@v2
        with:
          name: sdcard-${{ matrix.raspberry }}-${{ env.SHA }}.img
          path: sdcard-${{ matrix.raspberry }}-${{ env.SHA }}.img

      - name: Prepare Release Image
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cp output/${{ matrix.raspberry }}/images/sdcard.img sdcard-${{ matrix.raspberry }}-${{ env.GIT_TAG_NAME }}.img
          gzip sdcard-${{ matrix.raspberry }}-${{ env.GIT_TAG_NAME }}.img

      - name: Store Release Image
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: sdcard-${{ matrix.raspberry }}-${{ env.GIT_TAG_NAME }}.img.gz

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # We use a temporary file as Github Actions support for multiline
      # environment variables is quite shady: https://github.com/actions/toolkit/issues/403
      - name: Create Changelog
        run: |
          cat << EOF > CHANGELOG.md
            What's new:

          EOF
          git log $(git describe --tags --abbrev=0 HEAD^)..${{ github.ref }} --no-merges --pretty=format:"- %s" >> CHANGELOG.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: CHANGELOG.md

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: release

      - name: Upload Binaries to Release
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["sdcard*"]'
